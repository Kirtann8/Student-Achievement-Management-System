
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
package.json
yarn.lock

# Production Build Files
dist/
build/
frontend/dist/
frontend/build/

# Environment Variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
backend/.env
frontend/.env

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime Data
pids/
*.pid
*.seed
*.pid.lock

# Coverage Directory (Jest/NYC)
coverage/
*.lcov
.nyc_output/

# Dependency Directories
node_modules/
jspm_packages/

# Optional NPM Cache Directory
.npm
.eslintcache

# Optional REPL History
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity File
.yarn-integrity

# MongoDB Database Files (if running locally)
data/
db/
mongodb/

# File Uploads (Certificates)
backend/uploads/
uploads/
temp/

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Temporary Files
*.tmp
*.temp

# Documentation Files & Build (MongoDB docs, generated docs, etc.)
docs/
docs/build/
docs/_build/
docs/dist/

# Testing
test-results/
*.test.js.snap

# Cache Files
.cache/
.parcel-cache/

# Next.js (if applicable)
.next/
out/

# Nuxt.js (if applicable)
.nuxt/
dist/

# Vite (Frontend Build Tool)
.vite/

# ESLint Cache
.eslintcache

# Prettier
.prettierignore

# TypeScript (if using TS)
*.tsbuildinfo

# Optional: Keep sample certificates but ignore real uploads
!backend/uploads/sample-certificate-1.pdf
!backend/uploads/sample-certificate-2.pdf

# Backup Files
*.bak
*.backup

# Certificates and Keys (Security)
*.pem
*.key
*.crt
*.csr

# Local Development Overrides
docker-compose.override.yml
.env.override



